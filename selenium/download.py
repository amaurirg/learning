import os
from sys import stdout
from time import sleep

from django.conf import settings
from django.core.management import BaseCommand
from selenium.webdriver.support.wait import WebDriverWait

from bots_argo.base import BaseArgoSLA


# Função para verificar o término de download mas só funciona com Interface gráfica
# TODO AJUSTAR PORQUE VEIO DE UM DJANGO COMMAND
class Command(BaseCommand):
    help = 'Download the sla report generated by Argo'

    def handle(self, *args, **options):
        bot = BaseArgoSLA(ui=True)
        bot.browser.get("https://download.teamviewer.com/download/TeamViewer_Setup_x64.exe")
        bot.browser.get('chrome://downloads/')

        count = 0
        while not os.listdir(settings.PROCESSING_PATH) or count == 5:
            count += 1
        if count == 5:
            return 'File not found!'

        # if os.listdir(settings.PROCESSING_PATH):
        filename = os.listdir(settings.PROCESSING_PATH)[0]
        download_status = 'downloading'

        while download_status == 'downloading':
            # for filename in os.listdir(settings.PROCESSING_PATH):
            if filename.endswith(".crdownload"):
                msg = "em andamento"
                sleep(1)
            else:
                msg = "concluído"
                download_status = 'complete'



            stdout.write(f'\rDownload {msg}')
            stdout.flush()
        #             TODO VER ISSO
        size_file = os.path.getsize(f'{settings.PROCESSING_PATH}/{filename}') / 1024
        if size_file > 1:
            wait = size_file / 0.5
            bot.wdw = WebDriverWait(bot.browser, wait)
            print(f'\nTempo estimado para download = {wait} segundos')
            return 'File larger than 1MB', wait
        print()


# Função para verificar o término de download mas só funciona com Interface gráfica
def every_downloads_chrome(driver):
    if not driver.current_url.startswith("chrome://downloads"):
        driver.get("chrome://downloads/")
    return driver.execute_script("""
        var items = document.querySelector('downloads-manager')
            .shadowRoot.getElementById('downloadsList').items;
        if (items.every(e => e.state === "COMPLETE"))
            return items.map(e => e.fileUrl || e.file_url);
        """)

# waits for all the files to be completed and returns the paths
# self.wdw = WebDriverWait(self.browser, 20)
paths = self.wdw.until(every_downloads_chrome)
print(paths)