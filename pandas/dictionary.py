import pandas as pd

# nomes = [
#     {"Nome": "Ary", "Sexo": "M", "Idade": 21},
#     {"Nome": "Catia", "Sexo": "F", "Idade": 19},
#     {"Nome": "Carlos", "Sexo": "M", "Idade": 50},
#     {"Nome": "Beto", "Sexo": "M", "Idade": 29},
#     {"Nome": "Bruna", "Sexo": "F", "Idade": 31},
#     {"Nome": "Ana", "Sexo": "F", "Idade": 42}
#         ]
# df = pd.DataFrame(data = nomes)
# print(df)

d = {'soapenv:Envelope': {'@xmlns:soapenv': 'http://schemas.xmlsoap.org/soap/envelope/',
  '@xmlns:mes': 'http://www.ebxml.org/namespaces/messageHeader',
  '@xmlns:sec': 'http://schemas.xmlsoap.org/ws/2002/12/secext',
  '@xmlns:ns': 'http://webservices.sabre.com/sabreXML/2011/10',
  'soapenv:Header': {'mes:MessageHeader': {'@mes:id': '',
    '@mes:version': '',
    'mes:From': {'mes:PartyId': {'@mes:type': ''}, 'mes:Role': None},
    'mes:To': {'mes:PartyId': {'@mes:type': ''}, 'mes:Role': None},
    'mes:CPAId': None,
    'mes:ConversationId': None,
    'mes:Service': {'@mes:type': ''},
    'mes:Action': None,
    'mes:MessageData': {'mes:MessageId': None,
     'mes:Timestamp': None,
     'mes:RefToMessageId': None,
     'mes:TimeToLive': None,
     'mes:Timeout': None},
    'mes:DuplicateElimination': None,
    'mes:Description': {'@xml:lang': ''}},
   'sec:Security': {'sec:UsernameToken': {'sec:Username': '0470',
     'sec:Password': 'B2BGWS21',
     'sec:NewPassword': None,
     'Organization': 'AAP',
     'Domain': 'G3'},
    'sec:SabreAth': None,
    'sec:BinarySecurityToken': None}},
  'soapenv:Body': {'ns:SpecialServiceRQ': {'@ReturnHostCommand': '',
    '@TimeStamp': '',
    '@Version': '',
    'ns:SpecialServiceInfo': {'ns:AdvancePassenger': {'@SegmentNumber': '',
      'ns:Document': {'@ExpirationDate': '',
       '@Number': '',
       '@Type': '',
       'ns:IssueCountry': None,
       'ns:NationalityCountry': None,
       'ns:Visa': {'@IssueDate': '',
        'ns:ApplicableCountry': None,
        'ns:PlaceOfBirth': None,
        'ns:PlaceOfIssue': None}},
      'ns:PersonName': {'@DateOfBirth': '',
       '@DocumentHolder': '',
       '@Gender': '',
       '@LapChild': '',
       '@NameNumber': '',
       'ns:GivenName': None,
       'ns:MiddleName': None,
       'ns:Surname': None},
      'ns:ResidentDestinationAddress': {'@Type': '',
       'ns:City': None,
       'ns:Country': None,
       'ns:Street': None,
       'ns:State': None,
       'ns:Zip': None},
      'ns:VendorPrefs': {'ns:Airline': {'@Hosted': ''}}},
     'ns:SecureFlight': {'@SegmentNumber': '',
      'ns:IssueCountry': None,
      'ns:KnownTravelerNumber': None,
      'ns:PersonName': {'@DateOfBirth': '',
       '@Gender': '',
       '@NameNumber': '',
       'ns:GivenName': None,
       'ns:Surname': None},
      'ns:RedressNumber': None,
      'ns:VendorPrefs': {'ns:Airline': {'@Hosted': ''}}},
     'ns:Service': {'@SegmentNumber': '',
      '@SSR_Code': '',
      'ns:PersonName': {'@NameNumber': ''},
      'ns:Text': None,
      'ns:VendorPrefs': {'ns:Airline': {'@Code': '', '@Hosted': ''}}}}}}}}

df = pd.DataFrame.from_dict(d)
print(df)


# p = pd.read_json(d)
# print(p)